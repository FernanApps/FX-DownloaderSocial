name: Build Release APK, Core Jar and Publish

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'v')
    steps:
    - name: Checkout private tools
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.ATOKEN }}

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle and wrapper
      uses: actions/cache@v3
      with:
         path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
         restore-keys: |
            ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Get Version App
      id: get_version
      run: |
           app_version=$(./gradlew -q app:printAppVersion | tail -n 1)
           echo -e "Version is $app_version"
           echo "app_version=$app_version" >> $GITHUB_OUTPUT

    - name: Generate Shadow Jar
      run: ./gradlew Core:shadowJarCore

    - name: Build and sign release APK
      run: |
        release_data="${{ secrets.RELEASE_DATA }}"
        IFS='|' read -r username password <<< "$release_data"

        export STORE_PASSWORD="$password"
        export KEY_ALIAS="$username"

        curl -o keystore.jks ${{ secrets.RELEASE_KEYSTORE_URL }}
        echo "$STORE_PASSWORD" > keystore.password
        echo "$KEY_ALIAS" > key.alias
        ./gradlew assembleRelease -Pandroid.injected.signing.store.file=keystore.jks -Pandroid.injected.signing.store.passwordFile=keystore.password -Pandroid.injected.signing.key.aliasFile=key.alias

    - name: Create Release Jar
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.ATOKEN }}"
        automatic_release_tag: ${{ steps.get_version.outputs.app_version }}
        prerelease: false
        title: "vÂ¬${{ steps.get_version.outputs.app_version }}"
        files: |
          Core/build/libs/shadowJarCore.jar
          app/build/outputs/apk/release/*

    - name: AutoJitPack
      uses: js6pak/start-jitpack@master


#     - name: Update Readme
#       run: |
#               USERNAME="${{ github.actor }}"
#               REPOSITORY="${{ github.repository }}"
#               REPO_NAME=$(basename "$REPOSITORY")
#
#               VERSION=${{ steps.get_version.outputs.library_version }}
#               CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
#
#               URL_IMP="com.github.$USERNAME:$REPO_NAME:+@aar"
#
#               sed -i 's|implementation \(\S\+\)|implementation "'$URL_IMP'"|g' README.md
#
#               git config --global user.name "GitHub Actions"
#               git config --global user.email "actions@github.com"
#               git add README.md
#               git add gradlew
#               git commit -m "Update README.md with latest dependencies"
#               git push origin $CURRENT_BRANCH
